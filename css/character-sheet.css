/* Character Sheet Styles - Modern Edition */

/* Sheet Container */
.sheet-container {
    max-width: 960px;
    margin: 30px auto;
    background-color: var(--white);
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    color: var(--dark-gray);
    width: 100%;
    overflow: hidden;
}

.sheet-header {
    background-color: var(--light-teal);
    color: var(--white);
    padding: 20px 25px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.sheet-header h2 {
    margin: 0;
    font-size: 1.6rem;
    font-weight: 600;
}

.sheet-body {
    padding: 30px;
}

.edit-sections {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 25px;
}

@media (max-width: 768px) {
    .edit-sections {
        grid-template-columns: 1fr;
    }
}

.edit-section {
    margin-bottom: 30px;
    background-color: #f9f9f9;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.edit-section h3 {
    color: var(--dark-blue);
    font-size: 1.3rem;
    margin-top: 0;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 2px solid var(--light-teal);
    font-weight: 600;
}

.form-row {
    margin-bottom: 20px;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: var(--dark-blue);
}

.form-group input,
.form-group select,
.form-group textarea {
    width: 100%;
    padding: 12px;
    background-color: var(--white);
    border: 1px solid var(--light-gray);
    border-radius: 5px;
    color: var(--dark-gray);
    font-family: 'Poppins', sans-serif;
    font-size: 0.95rem;
    transition: border-color 0.3s, box-shadow 0.3s;
}

.form-group input:focus,
.form-group select:focus,
.form-group textarea:focus {
    outline: none;
    border-color: var(--light-teal);
    box-shadow: 0 0 0 3px rgba(65, 200, 212, 0.2);
}

.form-group textarea {
    min-height: 120px;
    resize: vertical;
}

.attributes-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 20px;
}

.attribute {
    background-color: #f9f9f9;
    border-radius: 10px;
    padding: 20px;
    text-align: center;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border: 2px solid var(--light-gray);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 140px;
}

.attribute:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.08);
    border-color: var(--light-teal);
}

.attribute-label {
    font-size: 1rem;
    color: var(--dark-blue);
    margin-bottom: 12px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.attribute-value {
    font-size: 2.8rem;
    font-weight: 700;
    color: var(--dark-blue);
    line-height: 1;
}

.profile-image-preview {
    position: relative;
    width: 150px;
    height: 150px;
    border-radius: 10px;
    overflow: hidden;
    margin-bottom: 15px;
    border: 3px solid var(--accent-secondary);
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
}

.profile-image-preview img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.profile-image-preview:hover img {
    transform: scale(1.05);
}

.profile-image-preview .edit-icon {
    position: absolute;
    bottom: 5px;
    right: 5px;
    width: 32px;
    height: 32px;
    background-color: rgba(0, 0, 0, 0.6);
    color: var(--text);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    z-index: 5;
}

.profile-image-preview .edit-icon:hover {
    background-color: var(--accent-primary);
}

.action-buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 30px;
    gap: 15px;
}

/* Using global button styles */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 12px 25px;
    border-radius: 5px;
    font-weight: 500;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.btn-primary {
    background-color: var(--orange);
    color: var(--white);
}

.btn-primary:hover {
    background-color: #e07b26;
}

.btn-secondary {
    background-color: var(--light-gray);
    color: var(--dark-gray);
}

.btn-secondary:hover {
    background-color: #d5d5d5;
}

.btn-danger {
    background-color: var(--danger);
    color: var(--white);
}

.btn-danger:hover {
    background-color: #d62c1a;
}

.alert {
    padding: 15px;
    border-radius: 5px;
    margin-bottom: 20px;
    font-weight: 500;
}

.alert-danger {
    background-color: rgba(231, 76, 60, 0.1);
    color: #e74c3c;
    border: 1px solid rgba(231, 76, 60, 0.2);
}

.alert-success {
    background-color: rgba(40, 167, 69, 0.1);
    color: #28a745;
    border: 1px solid rgba(40, 167, 69, 0.2);
}

/* System-specific styles */
.system-specific-fields {
    display: none;
}

.system-specific-fields.active {
    display: block;
}

/* Character Sheet List Styles */
.sheet-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 25px;
    margin-top: 30px;
}

.sheet-card {
    background-color: var(--white);
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s, box-shadow 0.3s;
    border: 1px solid var(--light-gray);
}

.sheet-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.sheet-card-image {
    width: 100%;
    height: 180px;
    object-fit: cover;
    border-bottom: 1px solid var(--light-gray);
}

.sheet-card-body {
    padding: 20px;
}

.sheet-card-title {
    font-size: 1.3rem;
    margin: 0 0 10px 0;
    color: var(--dark-blue);
    font-weight: 600;
}

.sheet-card-system {
    font-size: 0.9rem;
    color: var(--light-teal);
    margin-bottom: 12px;
    font-weight: 500;
}

.sheet-card-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 15px;
}

.create-new-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: rgba(65, 200, 212, 0.05);
    border: 2px dashed var(--light-teal);
    border-radius: 10px;
    padding: 35px;
    text-align: center;
    height: 100%;
    min-height: 280px;
    transition: all 0.3s ease;
}

.create-new-card:hover {
    background-color: rgba(65, 200, 212, 0.1);
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

.create-new-card i {
    font-size: 48px;
    color: var(--light-teal);
    margin-bottom: 20px;
}

.create-new-card h3 {
    color: var(--dark-blue);
    margin-bottom: 15px;
    font-weight: 600;
}

.page-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 30px 20px;
}

@media (max-width: 768px) {
    .sheet-list {
        grid-template-columns: 1fr;
    }
    
    .page-container {
        padding: 20px 15px;
    }
}

.attribute-field {
    width: 100%;
    height: 64px !important;
    padding: 12px !important;
    text-align: center;
    border: 2px solid var(--light-gray) !important;
    border-radius: 8px !important;
    background-color: var(--white);
    color: var(--dark-blue);
    font-weight: 700;
    font-size: 1.8rem !important;
    transition: all 0.2s ease;
    box-shadow: inset 0 1px 3px rgba(0,0,0,0.05);
    font-family: 'Poppins', sans-serif;
}

.attribute-field:focus {
    outline: none;
    border-color: var(--light-teal) !important;
    box-shadow: 0 0 0 3px rgba(65, 200, 212, 0.2), inset 0 1px 3px rgba(0,0,0,0.05);
}

.attribute-item {
    display: flex;
    flex-direction: column;
    margin-bottom: 15px;
}

.attribute-item label {
    margin-bottom: 8px;
    color: var(--dark-blue);
    font-weight: 500;
    font-size: 1rem;
}

/* Character header - new layout with image and name at top */
.character-header {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--accent-secondary);
}

.character-image {
    position: relative;
    width: 150px;
    height: 150px;
    border-radius: 8px;
    overflow: hidden;
    border: 2px solid var(--accent-secondary);
    flex-shrink: 0;
}

.character-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.character-image .edit-icon {
    position: absolute;
    bottom: 5px;
    right: 5px;
    width: 32px;
    height: 32px;
    background-color: rgba(0, 0, 0, 0.6);
    color: var(--text);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
}

.character-image .edit-icon:hover {
    background-color: var(--accent-primary);
}

.character-info {
    flex: 1;
}

.character-info h3 {
    margin: 0 0 0.5rem;
    font-size: 1.8rem;
    color: var(--accent-primary);
}

.character-class {
    font-size: 1.2rem;
    color: var(--text);
    margin: 0 0 0.5rem;
}

.character-background {
    font-size: 0.95rem;
    color: var(--accent-secondary);
    opacity: 0.8;
    margin: 0;
}

/* HP Attribute Styles */
/* Remove .hp-container styles */

.hp-attribute {
    /* Inherit size/position from .attribute within the grid */
    /* Keep internal flex layout */
    display: flex;
    flex-direction: column;
    justify-content: center; 
    align-items: center;
    /* Remove specific height, width, margin, padding if inherited correctly */
    /* Ensure box-sizing is consistent if needed, often inherited */
    box-sizing: border-box; 
}

/* Remove .hp-attribute:hover if identical to .attribute:hover */

.hp-attribute .attribute-label {
    /* Match .attribute-label */
    font-size: 1rem;
    color: var(--dark-blue);
    margin-bottom: 12px; 
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    line-height: 1.2; 
    flex-basis: auto; 
    text-align: center;
}

.hp-value-controls-wrapper {
    display: flex;
    flex-direction: column; 
    align-items: center; 
    justify-content: center; 
    gap: 8px; /* Adjust gap if needed */
    width: 100%;
}

.hp-display {
    display: flex;
    align-items: baseline;
    justify-content: center; 
    width: 100%; 
    text-align: center;
    /* Match .attribute-value */
    font-size: 2.8rem;
    font-weight: 700;
    color: var(--dark-blue);
    line-height: 1; 
    flex-grow: 0; 
}

.hp-separator {
    font-size: 2.0rem; 
    margin: 0 4px; 
    color: var(--medium-gray);
    font-weight: 700; 
    line-height: 1; 
}

.max-hp {
    font-size: 2.0rem; 
    color: var(--medium-gray);
    font-weight: 700; 
    line-height: 1; 
}

.hp-controls {
    display: flex;
    gap: 10px;
    justify-content: center;
    width: 100%;
}

.hp-adjust-btn {
    background-color: var(--light-gray);
    color: var(--dark-blue);
    border: 1px solid var(--medium-gray);
    border-radius: 50%; 
    width: 30px;
    height: 30px;
    font-size: 1.2rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s, color 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    line-height: 1;
}

.hp-adjust-btn:hover {
    background-color: var(--medium-gray);
    color: var(--white);
}

.hp-adjust-btn:active {
    background-color: var(--dark-gray);
}

/* Remove specific HP responsive adjustments if general ones work */
@media (max-width: 480px) {
    /* General .attribute responsive styles should apply */
    /* Maybe adjust internal gap slightly if needed */
    .hp-value-controls-wrapper {
        gap: 5px;
    }
    .hp-display {
        font-size: 2.4rem; /* Adjust as needed for mobile */
    }
    .hp-separator, .max-hp {
         font-size: 1.8rem; /* Adjust as needed for mobile */
    }
}

/* Styles for input fields with +/- controls in edit view */
.input-with-controls {
    display: flex;
    align-items: center;
    gap: 8px;
}

.input-with-controls .attribute-field {
    flex-grow: 1;
}

.attribute-controls {
    display: flex;
    gap: 5px;
}

.attr-adjust-btn {
    background-color: var(--light-gray);
    color: var(--dark-blue);
    border: 1px solid var(--medium-gray);
    border-radius: 4px;
    width: 30px;
    height: 30px;
    font-size: 1.2rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s, color 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    line-height: 1;
    flex-shrink: 0;
}

.attr-adjust-btn:hover {
    background-color: var(--medium-gray);
    color: var(--white);
}

.attr-adjust-btn:active {
    background-color: var(--dark-gray);
} 